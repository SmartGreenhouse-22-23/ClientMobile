name: ci

on:
  push:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v3
      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11
      - name: build
        run: ./gradlew build -x test -x createDebugAndroidTestCoverageReport --parallel || ./gradlew build -x test -x createDebugAndroidTestCoverageReport --parallel || ./gradlew build -x test -x createDebugAndroidTestCoverageReport --parallel
      - name: test
        run: ./gradlew test --parallel || ./gradlew test --parallel || ./gradlew test --parallel
  instrumentation-test:
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        api-level: [26, 27, 28, 29]
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11

      - name: Instrumentation tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          emulator-build: 7425822
          script: ./gradlew connectedDebugAndroidTest --parallel || ./gradlew connectedDebugAndroidTest --parallel || ./gradlew connectedDebugAndroidTest --parallel
  release:
    if: github.event_name == 'push'
    needs:
      - build
      - instrumentation-test
    runs-on: ubuntu-latest
    concurrency:
      group: release
      cancel-in-progress: false
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOYMENT_TOKEN }}
        run: |
          npm install
          npx semantic-release
  success:
    runs-on: ubuntu-latest
    needs:
      - build
      - instrumentation-test
    if: >-
      always() && (
        contains(join(needs.*.result, ','), 'failure')
        || !contains(join(needs.*.result, ','), 'cancelled')
      )
    steps:
      - name: Verify that there were no failures
        run: ${{ !contains(join(needs.*.result, ','), 'failure') }}
